AWSTemplateFormatVersion: 2010-09-09
Description: Add neccesary roles and permissions to build packer image
Parameters:
  AwsAccountID:
    Description: Account ID
    Type: String
  ApplicationName:
    Description: Name of the webapp to be deployed
    Type: String
  AwsRegion:
    Description: Aws Region
    Type: String
  CDBucketName:
    Description: CD bucket name
    Type: String
  LambdaFunctionName:
    Description: Name of lambda function
    Type: String
  DynamoDBTable:
    Description: DynamoDB table name
    Type: String
Resources:
  CircleCIPackerUserPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: circleci-ec2-ami
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Action:
              - ec2:AttachVolume
              - ec2:AuthorizeSecurityGroupIngress
              - ec2:CopyImage
              - ec2:CreateImage
              - ec2:CreateKeypair
              - ec2:CreateSecurityGroup
              - ec2:CreateSnapshot
              - ec2:CreateTags
              - ec2:CreateVolume
              - ec2:DeleteKeyPair
              - ec2:DeleteSecurityGroup
              - ec2:DeleteSnapshot
              - ec2:DeleteVolume
              - ec2:DeregisterImage
              - ec2:DescribeImageAttribute
              - ec2:DescribeImages
              - ec2:DescribeInstances
              - ec2:DescribeInstanceStatus
              - ec2:DescribeRegions
              - ec2:DescribeSecurityGroups
              - ec2:DescribeSnapshots
              - ec2:DescribeSubnets
              - ec2:DescribeTags
              - ec2:DescribeVolumes
              - ec2:DetachVolume
              - ec2:GetPasswordData
              - ec2:ModifyImageAttribute
              - ec2:ModifyInstanceAttribute
              - ec2:ModifySnapshotAttribute
              - ec2:RegisterImage
              - ec2:RunInstances
              - ec2:StopInstances
              - ec2:TerminateInstances
            Resource:
              - "*"
      Users:
        -
          circleci
  CircleCIUploadToS3UserPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - s3:PutObject
            Resource:
              - !Sub arn:aws:s3:::${CDBucketName}
              - !Sub arn:aws:s3:::${CDBucketName}/*
      Users:
        - circleci
      ManagedPolicyName: CircleCI-Upload-To-S3
  CircleCICodeDeployUserPolciy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: CircleCI-Code-Deploy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - codedeploy:RegisterApplicationRevision
              - codedeploy:GetApplicationRevision
            Resource:
              - !Sub arn:aws:codedeploy:${AwsRegion}:${AwsAccountID}:application:${ApplicationName}
          - Effect: Allow
            Action:
              - codedeploy:CreateDeployment
              - codedeploy:GetDeployment
            Resource:
              - "*"
          - Effect: Allow
            Action:
              - codedeploy:GetDeploymentConfig
            Resource:
              - !Sub arn:aws:codedeploy:${AwsRegion}:${AwsAccountID}:deploymentconfig:CodeDeployDefault.OneAtATime
              - !Sub arn:aws:codedeploy:${AwsRegion}:${AwsAccountID}:deploymentconfig:CodeDeployDefault.HalfAtATime
              - !Sub arn:aws:codedeploy:${AwsRegion}:${AwsAccountID}:deploymentconfig:CodeDeployDefault.AllAtOnce
      Users:
      - circleci
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - !Ref LambdaExecutionPolicy
        - !Ref LambdaSESPolicy
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - 
            Sid: ""
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      RoleName: LambdaExecutionRole
  LambdaExecutionPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - 
            Effect: Allow
            Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
            Resource:
              - !Sub arn:aws:dynamodb:${AwsRegion}:${AwsAccountID}:table/${DynamoDBTable}
          - 
            Effect: Allow
            Action: logs:CreateLogGroup
            Resource:
              - !Sub arn:aws:logs:${AwsRegion}:${AwsAccountID}:*
          - 
            Effect: Allow
            Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource:
              - !Sub arn:aws:logs:${AwsRegion}:${AwsAccountID}:log-group:/aws/lambda/${LambdaFunctionName}:*
      ManagedPolicyName: LambdaExecutionPolicy
  UploadLambdaPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - 
            Effect: Allow
            Action:
              - lambda:*
            Resource:
              - "*"
      ManagedPolicyName: UploadLambdaPolicy
      Users:
        - circleci
  LambdaSESPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - 
            Effect: Allow
            Action:
              - ses:SendEmail
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              - ses:SendRawEmail
            Resource:
              - "*"
      ManagedPolicyName: LambdaSESPolicy
