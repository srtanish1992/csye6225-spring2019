version: 2
jobs:
  build-app:
    docker:
      - image: circleci/openjdk:8u181-jdk-stretch
    working_directory: ~/project/webapp
    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m
    steps:
      - checkout:
          path: ~/project
      # Configure aws cli
      - run:
          name: Install packages
          command: sudo apt-get update && sudo apt-get install wget zip unzip -y
      - run:
          name: Install awscli
          command: |
            sudo apt install apt-utils -y
            sudo apt-get install python3 -y
            sudo apt install python3-pip -y
            sudo pip3 install awscli
      - run:
          name: Configure AWS Access Key ID
          command: |
            aws configure set aws_access_key_id \
            ${AWS_ACCESS_KEY} \
            --profile default
      - run:
          name: Configure AWS Secret Access Key
          command: |
            aws configure set aws_secret_access_key \
            ${AWS_SECRET_KEY} \
            --profile default
      - run:
          name: Configure AWS region
          command: |
            aws configure set region ${AWS_REGION} \
            --profile default
      # Install aws code deploy
      - run:
          name: Install aws code deploy
          command: |
            # Ruby dep
            sudo apt-get install ruby-full
            cd
            wget https://aws-codedeploy-us-east-1.s3.amazonaws.com/latest/install
            chmod +x ./install
            sudo ./install auto
            sudo service codedeploy-agent start
      # Download and cache dependencies
      - restore_cache:
          keys:
            - m2-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - m2-
      - run:
          name: Download maven dependency
          command: mvn dependency:go-offline dependency:resolve-plugins
      - save_cache:
          paths:
            - ~/.m2
          key: m2-{{ checksum "pom.xml" }}
      - run:
          name: zip up artifacts if tests are successful
          command: |
            mvn integration-test
            [[ $? -eq 0 ]] || exit 1
            rm -rf ~/artifacts
            mkdir -p ~/artifacts/scripts
            cd ~/artifacts
            cp ~/project/webapp/target/*.war ~/artifacts
            cp ~/project/appspec.yml ~/artifacts
            mv ~/artifacts/noteapp-0.0.1-SNAPSHOT.war ~/artifacts/ROOT.war
            cp ~/project/infrastructure/aws/codedeploy/*.sh ~/artifacts/scripts
            cp ~/project/infrastructure/aws/codedeploy/cloudwatch-config.json ~/artifacts
      - run:
          name: Deploy to S3
          command: |
            cd ~/artifacts
            aws deploy push \
              --application-name csye6225-webapp \
              --s3-location s3://${AWS_CODE_DEPLOY_BUCKET}/csye6225-webapp-${CIRCLE_BUILD_NUM}.zip \
              --ignore-hidden-files
            aws deploy create-deployment \
              --application-name csye6225-webapp \
              --deployment-group-name csye6225-webapp-deployment \
              --s3-location bucket=${AWS_CODE_DEPLOY_BUCKET},bundleType=zip,key=csye6225-webapp-${CIRCLE_BUILD_NUM}.zip
workflows:
  version: 2
  configure-and-build:
    jobs:
      - build-app:
          filters:
            # TODO: change branch
            branches:
              only:
                - assignment8
                - master
